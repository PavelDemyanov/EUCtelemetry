Ниже представлено подробное и уточнённое техническое задание на разработку веб-приложения для преобразования данных CSV в изображения и последующего создания видео.

1. Общие сведения

Название проекта: (задается пользователем, если не задано – генерируется автоматически)
Описание: Веб-приложение, позволяющее загружать CSV-файл с данными, автоматически определять его формат, преобразовывать данные в графические кадры (PNG) с отображением параметров на синем фоне и объединять созданные кадры в видеофайл с заданными характеристиками. Дополнительно приложение обеспечивает управление проектами, просмотр статистики, скачивание результатов и автоматическое удаление проектов спустя 30 дней.

2. Типы CSV-файлов и их структура

Приложение должно поддерживать два типа CSV-файлов:

2.1 CSV формата darnkessbot

Столбцы:
	•	Date – содержит дату и время в формате дд.мм.гггг чч:мм:сс.XXX (XXX – миллисекунды). Необходимо преобразовать в UNIX timestamp.
	•	Temperature
	•	GPS Speed
	•	Total mileage
	•	Battery level
	•	Speed
	•	PWM
	•	Current
	•	Voltage
	•	Power

2.2 CSV формата wheellog

Столбцы:
	•	power
	•	totaldistance
	•	time – время в формате чч:мм:сс.XXX (XXX – миллисекунды).
	•	date – дата в формате гггг-мм-дд
	•	pwm
	•	battery_level
	•	speed
	•	system_temp
	•	current
	•	gps_speed
	•	voltage

3. Отображаемые параметры и их сопоставление с колонками CSV

В дальнейшем для создания изображений и видео используются следующие параметры:
	•	Время
	•	Скорость
	•	GPS
	•	Напряжение
	•	Температура
	•	Ток
	•	Батарея
	•	Пробег
	•	ШИМ
	•	Мощность

3.1 Для CSV darnkessbot

Параметр	Название колонки CSV
Время	Date (с преобразованием: дд.мм.гггг чч:мм:сс.XXX → timestamp)
Скорость	Speed
GPS	GPS Speed
Напряжение	Voltage
Температура	Temperature
Ток	Current
Батарея	Battery level
Пробег	Total mileage
ШИМ	PWM
Мощность	Power

3.2 Для CSV wheellog

Параметр	Название колонки CSV / Логика обработки
Время	Объединение двух колонок: date (гггг-мм-дд) и time (чч:мм:сс.XXX), последующее преобразование в timestamp
Скорость	speed
GPS	gps_speed
Напряжение	voltage
Температура	system_temp
Ток	current
Батарея	battery_level
Пробег	totaldistance
ШИМ	pwm
Мощность	power

После загрузки CSV-файла приложение должно автоматически определить его тип (darnkessbot или wheellog) на основании набора присутствующих колонок и уведомить об этом пользователя.

4. Функциональные требования

4.1 Загрузка и анализ CSV-файла
	•	Ввод имени проекта: Пользователь может задать название проекта; если поле пустое – генерируется автоматическое имя.
	•	Выбор CSV-файла: Предусмотреть механизм загрузки файла.
	•	Определение типа CSV: После загрузки файла приложение анализирует наличие столбцов для определения типа (darnkessbot или wheellog) и выводит соответствующее сообщение пользователю.
	•	Валидация: Проверить корректность структуры файла, наличие необходимых столбцов и соответствие форматов данных.

4.2 Преобразование данных
	•	Преобразование даты и времени:
	•	Для darnkessbot: преобразовать строку Date из формата дд.мм.гггг чч:мм:сс.XXX в UNIX timestamp.
	•	Для wheellog: объединить колонки date и time (форматы гггг-мм-дд и чч:мм:сс.XXX) и преобразовать в timestamp.
	•	Сохранение данных: Сформировать временную таблицу (или структуру данных в памяти/БД) с параметрами: Время, Скорость, GPS, Напряжение, Температура, Ток, Батарея, Пробег, ШИМ, Мощность.

4.3 Генерация изображений (PNG-кадров)
	•	Формат кадра:
	•	Фон кадра – синий.
	•	Параметры отображаются в одну строку (линейное расположение) с названием и значением.
	•	Для каждого параметра используется белый шрифт, а позади текста – чёрная плашка для улучшения читаемости.
	•	Настройка разрешения:
Пользователь выбирает разрешение кадра из двух вариантов:
	•	Full HD: 1920×1080
	•	4K: 3840×2160
	•	Интерфейс: Кнопка «Создать кадры» запускает процесс генерации изображений.
	•	Отображается прогресс-бар, показывающий количество созданных кадров относительно общего количества строк CSV.

4.4 Генерация видео
	•	Исходные данные: Используются ранее созданные PNG-кадры.
	•	Настройка параметров видео:
	•	Разрешение видео совпадает с выбранным разрешением кадров (Full HD или 4K).
	•	FPS (кадров в секунду) задается пользователем через поле ввода (по умолчанию 29.97).
	•	Выбор кодека: варианты – h264 или h265.
	•	Интерфейс: Кнопка «Создать видео» инициирует процесс объединения кадров в видео.
	•	Отображается прогресс-бар, демонстрирующий ход процесса создания видео.

4.5 Управление проектами

На основной странице приложения должен располагаться список ранее созданных проектов с отображением следующей информации:
	•	Название проекта
	•	Дата создания проекта
	•	Количество строк в исходном CSV-файле
	•	Количество созданных PNG-кадров
	•	FPS (использованное значение)
	•	Длина видео (если видео было создано)
	•	Кодек видео (если видео было создано)
	•	Осталось дней до автоматического удаления проекта

Для каждого проекта предусмотреть следующие кнопки:
	•	Скачать архив PNG – архив всех созданных изображений.
	•	Скачать видео – если видео уже создано.
	•	Создать видео – если видео ещё не создано.
	•	Удалить проект полностью – для ручного удаления проекта.

Пагинация: На экране отображается не более 10 записей; если проектов больше, предоставить кнопку «Показать ещё» для подгрузки следующих строк. Сортировка должна производиться по дате создания (свежие проекты – сверху).

4.6 Автоматическое удаление проектов
	•	После создания видео пользователю выводится уведомление о том, что проект будет автоматически удалён через 30 дней.
	•	Реализовать механизм автоматического удаления проектов (и связанных с ними файлов), чтобы не загружать сервер избыточными данными.

5. Пользовательский интерфейс (UI/UX)
	•	Главная страница:
	•	Форма для ввода названия проекта и выбора CSV-файла.
	•	Отображение информации о загруженном файле (определенный тип CSV).
	•	Настройки генерации изображений: выбор разрешения, ввод FPS.
	•	Кнопка «Создать кадры» с визуальным прогресс-баром.
	•	После генерации – блок для создания видео: выбор кодека, кнопка «Создать видео» с прогресс-баром.
	•	Страница управления проектами:
	•	Таблица со списком проектов, как описано выше.
	•	Функциональные кнопки для скачивания результатов, создания видео, удаления проекта.
	•	Информация об оставшемся времени до автоматического удаления.
	•	Пагинация с опцией «Показать ещё».
	•	Уведомления:
	•	Информирование пользователя о ходе операций (успешная загрузка, ошибки, завершение создания кадров/видео, уведомление о 30-дневном сроке удаления).
	•	Валидация и обработка ошибок:
	•	Проверка корректности загружаемого CSV-файла (структура, наличие необходимых столбцов).
	•	Вывод информативных сообщений об ошибках в случае некорректных данных или сбоев в процессе обработки.

6. Технические и нефункциональные требования
	•	Стек технологий:
Рекомендуется использование современных веб-технологий (например, Python для бэкенда, с соответствующими библиотеками для работы с CSV, изображениями и видео, а также фреймворков для создания веб-приложений).
	•	Производительность:
	•	Обеспечить асинхронную обработку для генерации изображений и видео, чтобы не блокировать пользовательский интерфейс.
	•	Прогресс-бар должен обновляться в реальном времени.
	•	Безопасность:
	•	Ограничить размер загружаемого файла.
	•	Производить валидацию и экранирование входных данных для предотвращения инъекций и других атак.
	•	Защита данных пользователей и удаление временных файлов.
	•	Хранение данных:
	•	Временное хранение загруженных CSV, сгенерированных PNG и видеофайлов.
	•	База данных для хранения информации о проектах (название, дата, параметры, ссылки на файлы, время до удаления).
	•	Логирование и мониторинг:
	•	Логирование процессов загрузки, генерации изображений и видео.
	•	Мониторинг ошибок и производительности.
	•	Документация:
	•	Подробная документация к API (если приложение предоставляет API-интерфейс) и описание архитектуры решения.
	•	Масштабируемость:
	•	Возможность одновременной работы нескольких пользователей.
	•	Планирование автоматического удаления проектов для освобождения ресурсов.

7. Алгоритм работы системы
	1.	Инициализация проекта:
	•	Пользователь заходит на главную страницу, вводит название проекта (или оставляет поле пустым для автогенерации) и выбирает CSV-файл.
	2.	Анализ CSV-файла:
	•	После загрузки система определяет формат CSV (darnkessbot или wheellog) по набору столбцов.
	•	Если структура не соответствует ни одному из форматов – выводится ошибка.
	3.	Преобразование данных:
	•	Из CSV-файла извлекаются данные, необходимые для формирования временной таблицы с параметрами.
	•	Производится преобразование времени в UNIX timestamp.
	4.	Генерация PNG-кадров:
	•	На основании временной таблицы для каждой строки создается изображение с заданными параметрами, оформленными в одну строку (белый текст на чёрном фоне) на синем фоне.
	•	Кадры сохраняются в формате PNG с выбранным разрешением.
	•	Отображается прогресс создания кадров.
	5.	Генерация видео:
	•	После успешного создания кадров пользователь может запустить процесс создания видео, выбрав кодек и подтвердив FPS.
	•	Видео собирается из PNG-кадров с сохранением исходного разрешения.
	•	Отображается прогресс создания видео.
	6.	Управление проектами:
	•	Все созданные проекты отображаются в списке с подробной информацией и функциональными кнопками для скачивания, создания видео или удаления.
	•	Проекты автоматически удаляются через 30 дней (с предварительным уведомлением пользователя).

8. Дополнительные аспекты
	•	Пользовательские уведомления:
Использовать всплывающие сообщения или модальные окна для уведомлений об успехе операции, ошибках и сроках удаления проекта.
	•	Адаптивность интерфейса:
Обеспечить корректное отображение и удобное использование интерфейса на различных устройствах (ПК, планшеты, мобильные устройства).
	•	Тестирование:
Провести модульное и интеграционное тестирование всех этапов обработки – от загрузки CSV до создания видео, а также тестирование пользовательского интерфейса.

Данное техническое задание охватывает основные и дополнительные аспекты разработки веб-приложения, позволяя детально описать функционал, требования к интерфейсу, обработку данных и систему управления проектами.